# To learn more about .editorconfig see https://aka.ms/editorconfigdocs
root = true

# All files
[*]
indent_style = space

# Code files
[*.{cs,csx,vb,vbx}]
indent_size = 4
end_of_line = crlf

# Xml files
[*.xml]
indent_size = 2

# Dotnet code style
[*.{cs,vb}]
# Organize usings
dotnet_sort_system_directives_first = true

# Avoid this. unless absolutely necessary
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion

# Use language keywords instead of BCL types
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Naming conventions
dotnet_naming_style.pascal_case_style.capitalization        = pascal_case
# Classes, structs, methods, enums, events, properties, namespaces, delegates must be PascalCase
dotnet_naming_rule.general_naming.severity                  = suggestion
dotnet_naming_rule.general_naming.symbols                   = general
dotnet_naming_rule.general_naming.style                     = pascal_case_style
dotnet_naming_symbols.general.applicable_kinds              = class,struct,enum,property,method,event,namespace,delegate
dotnet_naming_symbols.general.applicable_accessibilities    = *

# custom
dotnet_style_require_accessibility_modifiers = always
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async

dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity
# var v = a + (b * c);

dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity
# var v = (a < b) == (c > d);

dotnet_style_parentheses_in_other_binary_operators = always_for_clarity
#var v = a || (b && c);

dotnet_style_parentheses_in_other_operators = always_for_clarity
#var v = (a.b).Length;

dotnet_style_prefer_auto_properties = true
dotnet_style_prefer_is_null_check_over_reference_equality_method = true
dotnet_style_coalesce_expression = true
csharp_style_var_for_built_in_types = false
csharp_style_var_when_type_is_apparent = true
csharp_style_var_elsewhere = false
csharp_style_pattern_matching_over_as_with_null_check = true
csharp_style_pattern_matching_over_is_with_cast_check = true
csharp_style_inlined_variable_declaration = true
csharp_style_throw_expression = true
csharp_style_conditional_delegate_call = true
csharp_prefer_braces = true

csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

csharp_indent_case_contents = true
csharp_indent_switch_labels = true

csharp_space_after_cast = true
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false

csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = true

